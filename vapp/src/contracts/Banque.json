{
  "contractName": "Banque",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenaddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "buy",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "afficherBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenaddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"afficherBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buy\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"afficherBalance()\":{\"notice\":\"Nombre de jetons disponibles \\u00e0 l'achat\"},\"buy()\":{\"notice\":\"Acheter 100 tokens pour 1 ethereum\"},\"constructor\":{\"notice\":\"D\\u00e9finir le d\\u00e9ployeur de contrat en tant que propri\\u00e9taire et d\\u00e9finir l'adresse du contrat de jeton\"}},\"notice\":\"Titre Banque Banque d'achat de jeton (1eth = 100 token)\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Banque.sol\":\"Banque\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/Banque.sol\":{\"keccak256\":\"0xb4994c24dc6173e4c7c83a4b5a258605f7ada782b83bbd232b65b63932b7ecb1\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://852e00b143b0febc9d56c89ac29a27fdd53e6a91848e52724a52aad39f4d5c41\",\"dweb:/ipfs/QmPsUYUZKGsxh7ttqVa9KjwEZkpKgg1g77Yr59ogsdjzoP\"]},\"project:/contracts/ERC20Basic.sol\":{\"keccak256\":\"0xf86234d14f12263171963c6a1ec460ff207308e8c242f27cfbe4d01bfbc4c2fa\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://0bf4ee8cee23709766341fca84c451c74ce9a5c58d7c9b57b4b8cdeba8b49e30\",\"dweb:/ipfs/QmZ69Nrm8V3rtEjGamCdhsettmW9eFRCknWnp4nMqWwsxZ\"]},\"project:/contracts/Token.sol\":{\"keccak256\":\"0xa911f553eb34b7bcb666e2dab0ee3707794d66c432ab05f978c5c98ba7403b90\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://08cbd8d969290e66bbdef2dd90f045fcd7a1f5f53b76ec79581e0937eb6b20fc\",\"dweb:/ipfs/QmQN7yGf35qsfhteue7RYrhbhBBWT4eYXKVtFUeiv9T5zP\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161049938038061049983398101604081905261002f9161005d565b600180546001600160a01b039092166001600160a01b0319928316179055600080549091163317905561008b565b60006020828403121561006e578081fd5b81516001600160a01b0381168114610084578182fd5b9392505050565b6103ff8061009a6000396000f3fe6080604052600436106100295760003560e01c806355e0b2891461002e578063a6f2ae3a14610059575b600080fd5b34801561003a57600080fd5b50610043610063565b60405161005091906103c0565b60405180910390f35b6100616100f0565b005b60015460008054604051636eb1769f60e11b815291926001600160a01b039081169263dd62ed3e9261009b92169030906004016102ef565b60206040518083038186803b1580156100b357600080fd5b505afa1580156100c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100eb91906102d7565b905090565b34670de0b6b3a7640000146101205760405162461bcd60e51b81526004016101179061037f565b60405180910390fd5b600080546040516001600160a01b039091169182913480156108fc0292909190818181858888f1935050505015801561015d573d6000803e3d6000fd5b50600154600054604051636eb1769f60e11b81526064926001600160a01b039081169263dd62ed3e92610198929091169030906004016102ef565b60206040518083038186803b1580156101b057600080fd5b505afa1580156101c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101e891906102d7565b10156102065760405162461bcd60e51b81526004016101179061032d565b6001546000546040516323b872dd60e01b81526001600160a01b03928316926323b872dd9261023f929116903390606490600401610309565b602060405180830381600087803b15801561025957600080fd5b505af115801561026d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061029191906102b0565b6102ad5760405162461bcd60e51b815260040161011790610358565b50565b6000602082840312156102c1578081fd5b815180151581146102d0578182fd5b9392505050565b6000602082840312156102e8578081fd5b5051919050565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6020808252601190820152701bdddb995c881b9bdd08185b1b1bddd959607a1b604082015260600190565b6020808252600d908201526c1d1c985b9cd9995c8819985a5b609a1b604082015260600190565b60208082526021908201527f696e76616c69642076616c7565202d3e2031657468203d2031303020746f6b656040820152603760f91b606082015260800190565b9081526020019056fea26469706673582212202b09ffe24b2cfbff3e2fe8253db783ebf0c2cf2e4372082e61aef77a72132f6b64736f6c63430008000033",
  "deployedBytecode": "0x6080604052600436106100295760003560e01c806355e0b2891461002e578063a6f2ae3a14610059575b600080fd5b34801561003a57600080fd5b50610043610063565b60405161005091906103c0565b60405180910390f35b6100616100f0565b005b60015460008054604051636eb1769f60e11b815291926001600160a01b039081169263dd62ed3e9261009b92169030906004016102ef565b60206040518083038186803b1580156100b357600080fd5b505afa1580156100c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100eb91906102d7565b905090565b34670de0b6b3a7640000146101205760405162461bcd60e51b81526004016101179061037f565b60405180910390fd5b600080546040516001600160a01b039091169182913480156108fc0292909190818181858888f1935050505015801561015d573d6000803e3d6000fd5b50600154600054604051636eb1769f60e11b81526064926001600160a01b039081169263dd62ed3e92610198929091169030906004016102ef565b60206040518083038186803b1580156101b057600080fd5b505afa1580156101c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101e891906102d7565b10156102065760405162461bcd60e51b81526004016101179061032d565b6001546000546040516323b872dd60e01b81526001600160a01b03928316926323b872dd9261023f929116903390606490600401610309565b602060405180830381600087803b15801561025957600080fd5b505af115801561026d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061029191906102b0565b6102ad5760405162461bcd60e51b815260040161011790610358565b50565b6000602082840312156102c1578081fd5b815180151581146102d0578182fd5b9392505050565b6000602082840312156102e8578081fd5b5051919050565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6020808252601190820152701bdddb995c881b9bdd08185b1b1bddd959607a1b604082015260600190565b6020808252600d908201526c1d1c985b9cd9995c8819985a5b609a1b604082015260600190565b60208082526021908201527f696e76616c69642076616c7565202d3e2031657468203d2031303020746f6b656040820152603760f91b606082015260800190565b9081526020019056fea26469706673582212202b09ffe24b2cfbff3e2fe8253db783ebf0c2cf2e4372082e61aef77a72132f6b64736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:326:6",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:6",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "95:229:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "141:26:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "150:6:6"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "158:6:6"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "143:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "143:22:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "143:22:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "116:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "125:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "112:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "112:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "137:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "108:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "108:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "105:2:6"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "176:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "195:9:6"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "189:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "189:16:6"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "180:5:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "268:26:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "277:6:6"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "285:6:6"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "270:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "270:22:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "270:22:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "227:5:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "238:5:6"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "253:3:6",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "258:1:6",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "249:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "249:11:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "262:1:6",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "245:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "245:19:6"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "234:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "234:31:6"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "224:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "224:42:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "217:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "217:50:6"
                  },
                  "nodeType": "YulIf",
                  "src": "214:2:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "303:15:6",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "313:5:6"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "303:6:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "61:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "72:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "84:6:6",
                "type": ""
              }
            ],
            "src": "14:310:6"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n}",
      "id": 6,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2483:6",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:6",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "92:219:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "138:26:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "147:6:6"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "155:6:6"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "140:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "140:22:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "140:22:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "113:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "122:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "109:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "109:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "134:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "105:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "105:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "102:2:6"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "173:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "192:9:6"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "186:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "186:16:6"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "177:5:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "255:26:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "264:6:6"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "272:6:6"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "257:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "257:22:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "257:22:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "224:5:6"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "245:5:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "238:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "238:13:6"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "231:6:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "231:21:6"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "221:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "221:32:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "214:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "214:40:6"
                  },
                  "nodeType": "YulIf",
                  "src": "211:2:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "290:15:6",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "300:5:6"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "290:6:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "58:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "69:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "81:6:6",
                "type": ""
              }
            ],
            "src": "14:297:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "397:113:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "443:26:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "452:6:6"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "460:6:6"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "445:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "445:22:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "445:22:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "418:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "427:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "414:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "414:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "439:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "410:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "410:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "407:2:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "478:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "494:9:6"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "488:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "488:16:6"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "478:6:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "363:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "374:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "386:6:6",
                "type": ""
              }
            ],
            "src": "316:194:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "644:175:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "654:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "666:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "677:2:6",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "662:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "662:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "654:4:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "689:29:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "707:3:6",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "712:1:6",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "703:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "703:11:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "716:1:6",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "699:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "699:19:6"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "693:2:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "734:9:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "749:6:6"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "757:2:6"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "745:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "745:15:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "727:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "727:34:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "727:34:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "781:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "792:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "777:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "777:18:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "801:6:6"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "809:2:6"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "797:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "797:15:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "770:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "770:43:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "770:43:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "605:9:6",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "616:6:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "624:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "635:4:6",
                "type": ""
              }
            ],
            "src": "515:304:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "991:218:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1001:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1013:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1024:2:6",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1009:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1009:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1001:4:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1036:29:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1054:3:6",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1059:1:6",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "1050:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1050:11:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1063:1:6",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "1046:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1046:19:6"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1040:2:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1081:9:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1096:6:6"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1104:2:6"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1092:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1092:15:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1074:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1074:34:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1074:34:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1128:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1139:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1124:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1124:18:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "1148:6:6"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1156:2:6"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1144:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1144:15:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1117:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1117:43:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1117:43:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1180:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1191:2:6",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1176:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1176:18:6"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "1196:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1169:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1169:34:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1169:34:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_rational_100_by_1__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "944:9:6",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "955:6:6",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "963:6:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "971:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "982:4:6",
                "type": ""
              }
            ],
            "src": "824:385:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1388:167:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1405:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1416:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1398:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1398:21:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1398:21:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1439:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1450:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1435:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1435:18:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1455:2:6",
                        "type": "",
                        "value": "17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1428:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1428:30:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1428:30:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1478:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1489:2:6",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1474:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1474:18:6"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1494:19:6",
                        "type": "",
                        "value": "owner not allowed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1467:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1467:47:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1467:47:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1523:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1535:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1546:2:6",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1531:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1531:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1523:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_1e03d79bafbfba89e18770d62acab05657da301d81415122124e0e5c40b85f36__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1365:9:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1379:4:6",
                "type": ""
              }
            ],
            "src": "1214:341:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1734:163:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1751:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1762:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1744:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1744:21:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1744:21:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1785:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1796:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1781:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1781:18:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1801:2:6",
                        "type": "",
                        "value": "13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1774:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1774:30:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1774:30:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1824:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1835:2:6",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1820:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1820:18:6"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1840:15:6",
                        "type": "",
                        "value": "transfer fail"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1813:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1813:43:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1813:43:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1865:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1877:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1888:2:6",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1873:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1873:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1865:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d35fe8e3e3a4ab0323fd2dca45db261fa8c7ab4a56fb233745bca451cc78f27a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1711:9:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1725:4:6",
                "type": ""
              }
            ],
            "src": "1560:337:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2076:223:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2093:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2104:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2086:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2086:21:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2086:21:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2127:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2138:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2123:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2123:18:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2143:2:6",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2116:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2116:30:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2116:30:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2166:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2177:2:6",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2162:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2162:18:6"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2182:34:6",
                        "type": "",
                        "value": "invalid value -> 1eth = 100 toke"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2155:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2155:62:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2155:62:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2237:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2248:2:6",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2233:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2233:18:6"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2253:3:6",
                        "type": "",
                        "value": "n"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2226:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2226:31:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2226:31:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2266:27:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2278:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2289:3:6",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2274:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2274:19:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2266:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d6cf8df10b43abf987f193433d0de4d2b31e18dafa8f5c777fc389836c0cca69__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2053:9:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2067:4:6",
                "type": ""
              }
            ],
            "src": "1902:397:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2405:76:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2415:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2427:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2438:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2423:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2423:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2415:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2457:9:6"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2468:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2450:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2450:25:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2450:25:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2374:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2385:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2396:4:6",
                "type": ""
              }
            ],
            "src": "2304:177:6"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_address_t_address_t_rational_100_by_1__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_1e03d79bafbfba89e18770d62acab05657da301d81415122124e0e5c40b85f36__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"owner not allowed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d35fe8e3e3a4ab0323fd2dca45db261fa8c7ab4a56fb233745bca451cc78f27a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"transfer fail\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d6cf8df10b43abf987f193433d0de4d2b31e18dafa8f5c777fc389836c0cca69__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"invalid value -> 1eth = 100 toke\")\n        mstore(add(headStart, 96), \"n\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
      "id": 6,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "158:1401:0:-:0;;;360:178;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;404:5;:20;;-1:-1:-1;;;;;404:20:0;;;-1:-1:-1;;;;;;404:20:0;;;;;;:5;434:18;;;;;442:10;434:18;;;158:1401;;14:310:6;;137:2;125:9;116:7;112:23;108:32;105:2;;;158:6;150;143:22;105:2;189:16;;-1:-1:-1;;;;;234:31:6;;224:42;;214:2;;285:6;277;270:22;214:2;313:5;95:229;-1:-1:-1;;;95:229:6:o;:::-;158:1401:0;;;;;;",
  "deployedSourceMap": "158:1401:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;1363:194;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;602:692;;;:::i;:::-;;1363:194;1445:5;;1413:7;1462:5;;1439:44;;-1:-1:-1;;;1439:44:0;;1413:7;;-1:-1:-1;;;;;1445:5:0;;;;1439:22;;:44;;1462:5;;1477:4;;1439:44;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1432:51;;1363:194;:::o;602:692::-;652:9;665:7;652:20;644:66;;;;-1:-1:-1;;;644:66:0;;;;;;;:::i;:::-;;;;;;;;;769:28;808:5;;878:32;;-1:-1:-1;;;;;808:5:0;;;;;;900:9;878:32;;;;;900:9;;878:32;;769:28;878:32;900:9;808:5;878:32;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1001:5:0;;;1018;995:44;;-1:-1:-1;;;995:44:0;;1043:3;;-1:-1:-1;;;;;1001:5:0;;;;995:22;;:44;;1018:5;;;;1033:4;;995:44;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:51;;974:176;;;;-1:-1:-1;;;974:176:0;;;;;;;:::i;:::-;1187:5;;;1207;1181:49;;-1:-1:-1;;;1181:49:0;;-1:-1:-1;;;;;1187:5:0;;;;1181:25;;:49;;1207:5;;;1214:10;;1226:3;;1181:49;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1160:127;;;;-1:-1:-1;;;1160:127:0;;;;;;;:::i;:::-;602:692;:::o;14:297:6:-;;134:2;122:9;113:7;109:23;105:32;102:2;;;155:6;147;140:22;102:2;192:9;186:16;245:5;238:13;231:21;224:5;221:32;211:2;;272:6;264;257:22;211:2;300:5;92:219;-1:-1:-1;;;92:219:6:o;316:194::-;;439:2;427:9;418:7;414:23;410:32;407:2;;;460:6;452;445:22;407:2;-1:-1:-1;488:16:6;;397:113;-1:-1:-1;397:113:6:o;515:304::-;-1:-1:-1;;;;;745:15:6;;;727:34;;797:15;;792:2;777:18;;770:43;677:2;662:18;;644:175::o;824:385::-;-1:-1:-1;;;;;1092:15:6;;;1074:34;;1144:15;;;;1139:2;1124:18;;1117:43;1191:2;1176:18;;1169:34;;;;1024:2;1009:18;;991:218::o;1214:341::-;1416:2;1398:21;;;1455:2;1435:18;;;1428:30;-1:-1:-1;;;1489:2:6;1474:18;;1467:47;1546:2;1531:18;;1388:167::o;1560:337::-;1762:2;1744:21;;;1801:2;1781:18;;;1774:30;-1:-1:-1;;;1835:2:6;1820:18;;1813:43;1888:2;1873:18;;1734:163::o;1902:397::-;2104:2;2086:21;;;2143:2;2123:18;;;2116:30;2182:34;2177:2;2162:18;;2155:62;-1:-1:-1;;;2248:2:6;2233:18;;2226:31;2289:3;2274:19;;2076:223::o;2304:177::-;2450:25;;;2438:2;2423:18;;2405:76::o",
  "source": "pragma solidity ^0.8.0;\n\n// SPDX-License-Identifier: UNLICENSED\n\nimport \"./Token.sol\";\n\n/**\n * Titre Banque\n * Banque d'achat de jeton (1eth = 100 token)\n */\ncontract Banque {\n    address private owner;\n    address private token;\n\n    /**\n     * Définir le déployeur de contrat en tant que propriétaire et définir l'adresse du contrat de jeton\n     */\n    constructor(address tokenaddress) {\n        token = tokenaddress;\n        owner = msg.sender; // 'msg.sender' is sender of current call, contract deployer for a constructor\n    }\n\n    /**\n     * Acheter 100 tokens pour 1 ethereum\n     */\n    function buy() external payable {\n        require(msg.value == 1 ether, \"invalid value -> 1eth = 100 token\"); // check the amount paid for the purchase = 1eth\n        address payable portefeuille = payable(owner); // converted the owner's address to a payable address\n        portefeuille.transfer(msg.value); // transfer the amount received to the owner account\n\n        require(\n            Token(token).allowance(owner, address(this)) >= 100, // check the amount authorized by owner >= nb token user buy\n            \"owner not allowed\"\n        );\n        require(\n            Token(token).transferFrom(owner, msg.sender, 100), // token transfer\n            \"transfer fail\"\n        );\n    }\n\n    /**\n     * Nombre de jetons disponibles à l'achat\n     */\n    function afficherBalance() external view returns (uint256) {\n        return Token(token).allowance(owner, address(this)); // amount that the owner has authorized to be used by the contract\n    }\n}\n",
  "sourcePath": "C:\\Users\\Nadir\\Downloads\\projet\\Projet Blockchain\\contracts\\Banque.sol",
  "ast": {
    "absolutePath": "project:/contracts/Banque.sol",
    "exportedSymbols": {
      "Banque": [
        98
      ],
      "ERC20Basic": [
        167
      ],
      "SafeMath": [
        1106
      ],
      "Token": [
        1059
      ]
    },
    "id": 99,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "absolutePath": "project:/contracts/Token.sol",
        "file": "./Token.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 99,
        "sourceUnit": 1107,
        "src": "65:21:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 3,
          "nodeType": "StructuredDocumentation",
          "src": "88:69:0",
          "text": " Titre Banque\n Banque d'achat de jeton (1eth = 100 token)"
        },
        "fullyImplemented": true,
        "id": 98,
        "linearizedBaseContracts": [
          98
        ],
        "name": "Banque",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 5,
            "mutability": "mutable",
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 98,
            "src": "180:21:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "180:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 7,
            "mutability": "mutable",
            "name": "token",
            "nodeType": "VariableDeclaration",
            "scope": 98,
            "src": "207:21:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 6,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "207:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 22,
              "nodeType": "Block",
              "src": "394:144:0",
              "statements": [
                {
                  "expression": {
                    "id": 15,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 13,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "404:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 14,
                      "name": "tokenaddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "412:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "404:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 16,
                  "nodeType": "ExpressionStatement",
                  "src": "404:20:0"
                },
                {
                  "expression": {
                    "id": 20,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 17,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5,
                      "src": "434:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 18,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "442:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 19,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "442:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "434:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 21,
                  "nodeType": "ExpressionStatement",
                  "src": "434:18:0"
                }
              ]
            },
            "documentation": {
              "id": 8,
              "nodeType": "StructuredDocumentation",
              "src": "235:120:0",
              "text": " Définir le déployeur de contrat en tant que propriétaire et définir l'adresse du contrat de jeton"
            },
            "id": 23,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10,
                  "mutability": "mutable",
                  "name": "tokenaddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 23,
                  "src": "372:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "372:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "371:22:0"
            },
            "returnParameters": {
              "id": 12,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "394:0:0"
            },
            "scope": 98,
            "src": "360:178:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 78,
              "nodeType": "Block",
              "src": "634:660:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 31,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 28,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "652:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 29,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "652:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 30,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "665:7:0",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        "src": "652:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c69642076616c7565202d3e2031657468203d2031303020746f6b656e",
                        "id": 32,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "674:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d6cf8df10b43abf987f193433d0de4d2b31e18dafa8f5c777fc389836c0cca69",
                          "typeString": "literal_string \"invalid value -> 1eth = 100 token\""
                        },
                        "value": "invalid value -> 1eth = 100 token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d6cf8df10b43abf987f193433d0de4d2b31e18dafa8f5c777fc389836c0cca69",
                          "typeString": "literal_string \"invalid value -> 1eth = 100 token\""
                        }
                      ],
                      "id": 27,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "644:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 33,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "644:66:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34,
                  "nodeType": "ExpressionStatement",
                  "src": "644:66:0"
                },
                {
                  "assignments": [
                    36
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 36,
                      "mutability": "mutable",
                      "name": "portefeuille",
                      "nodeType": "VariableDeclaration",
                      "scope": 78,
                      "src": "769:28:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 35,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "769:15:0",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 39,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5,
                        "src": "808:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 38,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "800:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 37,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "800:8:0",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 40,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "800:14:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "769:45:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 45,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "900:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 46,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "900:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 42,
                        "name": "portefeuille",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "878:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 44,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "878:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 47,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "878:32:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48,
                  "nodeType": "ExpressionStatement",
                  "src": "878:32:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 61,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 54,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5,
                              "src": "1018:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 57,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "1033:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Banque_$98",
                                    "typeString": "contract Banque"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Banque_$98",
                                    "typeString": "contract Banque"
                                  }
                                ],
                                "id": 56,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1025:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 55,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1025:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 58,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1025:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 51,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7,
                                  "src": "1001:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 50,
                                "name": "Token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1059,
                                "src": "995:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Token_$1059_$",
                                  "typeString": "type(contract Token)"
                                }
                              },
                              "id": 52,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "995:12:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Token_$1059",
                                "typeString": "contract Token"
                              }
                            },
                            "id": 53,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1058,
                            "src": "995:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 59,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "995:44:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "313030",
                          "id": 60,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1043:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "src": "995:51:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f776e6572206e6f7420616c6c6f776564",
                        "id": 62,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1121:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e03d79bafbfba89e18770d62acab05657da301d81415122124e0e5c40b85f36",
                          "typeString": "literal_string \"owner not allowed\""
                        },
                        "value": "owner not allowed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1e03d79bafbfba89e18770d62acab05657da301d81415122124e0e5c40b85f36",
                          "typeString": "literal_string \"owner not allowed\""
                        }
                      ],
                      "id": 49,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "974:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 63,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "974:176:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64,
                  "nodeType": "ExpressionStatement",
                  "src": "974:176:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 70,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5,
                            "src": "1207:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 71,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1214:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 72,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1214:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "hexValue": "313030",
                            "id": 73,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1226:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 67,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7,
                                "src": "1187:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 66,
                              "name": "Token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1059,
                              "src": "1181:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Token_$1059_$",
                                "typeString": "type(contract Token)"
                              }
                            },
                            "id": 68,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1181:12:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Token_$1059",
                              "typeString": "contract Token"
                            }
                          },
                          "id": 69,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 996,
                          "src": "1181:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 74,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1181:49:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7472616e73666572206661696c",
                        "id": 75,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1262:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d35fe8e3e3a4ab0323fd2dca45db261fa8c7ab4a56fb233745bca451cc78f27a",
                          "typeString": "literal_string \"transfer fail\""
                        },
                        "value": "transfer fail"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d35fe8e3e3a4ab0323fd2dca45db261fa8c7ab4a56fb233745bca451cc78f27a",
                          "typeString": "literal_string \"transfer fail\""
                        }
                      ],
                      "id": 65,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1160:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 76,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1160:127:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77,
                  "nodeType": "ExpressionStatement",
                  "src": "1160:127:0"
                }
              ]
            },
            "documentation": {
              "id": 24,
              "nodeType": "StructuredDocumentation",
              "src": "544:53:0",
              "text": " Acheter 100 tokens pour 1 ethereum"
            },
            "functionSelector": "a6f2ae3a",
            "id": 79,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "buy",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "614:2:0"
            },
            "returnParameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "634:0:0"
            },
            "scope": 98,
            "src": "602:692:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 96,
              "nodeType": "Block",
              "src": "1422:135:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5,
                        "src": "1462:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 92,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1477:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Banque_$98",
                              "typeString": "contract Banque"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Banque_$98",
                              "typeString": "contract Banque"
                            }
                          ],
                          "id": 91,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1469:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 90,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1469:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 93,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1469:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 86,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7,
                            "src": "1445:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 85,
                          "name": "Token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1059,
                          "src": "1439:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Token_$1059_$",
                            "typeString": "type(contract Token)"
                          }
                        },
                        "id": 87,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1439:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Token_$1059",
                          "typeString": "contract Token"
                        }
                      },
                      "id": 88,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "allowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1058,
                      "src": "1439:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view external returns (uint256)"
                      }
                    },
                    "id": 94,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1439:44:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 84,
                  "id": 95,
                  "nodeType": "Return",
                  "src": "1432:51:0"
                }
              ]
            },
            "documentation": {
              "id": 80,
              "nodeType": "StructuredDocumentation",
              "src": "1300:58:0",
              "text": " Nombre de jetons disponibles à l'achat"
            },
            "functionSelector": "55e0b289",
            "id": 97,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "afficherBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 81,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1387:2:0"
            },
            "returnParameters": {
              "id": 84,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 83,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 97,
                  "src": "1413:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 82,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1413:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1412:9:0"
            },
            "scope": 98,
            "src": "1363:194:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 99,
        "src": "158:1401:0"
      }
    ],
    "src": "0:1560:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x51b59856918991B2cF17316e361cc38bc20E9a80",
      "transactionHash": "0x0eccd5d14f5d8207e9119fd956deecde21bc2c961312d3aa15bfc936353e8a9e"
    }
  },
  "schemaVersion": "3.4.16",
  "updatedAt": "2024-04-26T07:16:54.371Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "afficherBalance()": {
        "notice": "Nombre de jetons disponibles à l'achat"
      },
      "buy()": {
        "notice": "Acheter 100 tokens pour 1 ethereum"
      },
      "constructor": {
        "notice": "Définir le déployeur de contrat en tant que propriétaire et définir l'adresse du contrat de jeton"
      }
    },
    "notice": "Titre Banque Banque d'achat de jeton (1eth = 100 token)",
    "version": 1
  }
}